<?xml version="1.0" encoding="utf-8"?>
<!--*******************************************************************************
* File Name: schema_board.xsd
*
* Version: 2.1
*
* Description:
*  This file contains the board manifest schema.
*
********************************************************************************
* Copyright 2018-2024, Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
*
* This software, including source code, documentation and related
* materials ("Software") is owned by Cypress Semiconductor Corporation
* or one of its affiliates ("Cypress") and is protected by and subject to
* worldwide patent protection (United States and foreign),
* United States copyright laws and international treaty provisions.
* Therefore, you may use this Software only as provided in the license
* agreement accompanying the software package from which you
* obtained this Software ("EULA").
* If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
* non-transferable license to copy, modify, and compile the Software
* source code solely for use in connection with Cypress's
* integrated circuit products.  Any reproduction, modification, translation,
* compilation, or representation of this Software except as specified
* above is prohibited without the express written permission of Cypress.
*
* Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
* reserves the right to make changes to the Software without notice. Cypress
* does not assume any liability arising out of the application or use of the
* Software or any product or circuit described in the Software. Cypress does
* not authorize its products for use in any products where a malfunction or
* failure of the Cypress product may reasonably be expected to result in
* significant property damage, injury or death ("High Risk Product"). By
* including Cypress's product in a High Risk Product, the manufacturer
* of such system or application assumes all risk of such use and in doing
* so agrees to indemnify Cypress against all liability.
*******************************************************************************-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           attributeFormDefault="qualified"
           elementFormDefault="qualified"
           xml:lang="EN"
           version="2.1">

  <!-- URI constraints
       - starts with "https://github.com/" or
         starts with "techpack:<key>/
       - w/o whitespaces
  -->
  <xs:simpleType name="validURI">
    <xs:restriction base="xs:string">
      <xs:pattern value="(https://github.com/\S+|techpack:[0123456789abcdef-]+/\S+)"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- URI constraints for Documentation
       - starts with "http(s)://www.cypress.com/" or
             "https://www.infineon.com/" or
             "https://community.infineon.com" or
             "https://github.com/"
       - w/o whitespaces
  -->
  <xs:simpleType name="validURIdoc">
    <xs:restriction base="xs:string">
      <xs:pattern value="(https?://www.cypress.com/\S+|https://www.infineon.com/\S+|https://community.infineon.com/\S+|https://github.com/\S+)"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- URI constraints
       - starts with http(s)|file|ftp://
       - w/o whitespaces
  -->
  <xs:simpleType name="validResourceLocation">
    <xs:restriction base="xs:string">
      <xs:pattern value="(local|shared)"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- commit constraints
       - no
  -->
  <xs:simpleType name="validCommit">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>

  <!-- capabilities constraints
       - whitespace-separated list
  -->
  <xs:simpleType name="validCapabilities">
    <xs:restriction base="xs:string">
      <xs:pattern value="([\w_]+(\s*[\w_]+)*)?"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- flow version
  1.0 stands for old flow
  2.0 stads for UF
       - #.#
  -->
  <xs:simpleType name="validFlow">
    <xs:restriction base="xs:string">
      <xs:pattern value="(([\d]+.[\d]+)(,[\d]+.[\d]+)*)?"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- tools version
  package' major.minor.patch
       - #.#.#
  -->
  <xs:simpleType name="validToolsVersion">
    <xs:restriction base="xs:string">
      <xs:pattern value="([\d]+.[\d]+(.[\d]+)?)?"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- ID constraints
       - whitespace-separated list
  -->
  <xs:simpleType name="validID">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:pattern value="\s*\S+\s*"/>
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- NAME constraints
       - no leading/trailing whitespaces
  -->
  <xs:simpleType name="validName">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:pattern value="\S+(\s+\S+)*"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Not empty string constraint
  -->
  <xs:simpleType name="validString">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="boards">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="board" maxOccurs="unbounded" minOccurs="0">
          <xs:complexType>
            <xs:all>
              <xs:element type="validID" name="id" maxOccurs="1" minOccurs="1"/>
              <xs:element type="validURI" name="board_uri" maxOccurs="1" minOccurs="1"/>
              <xs:element name="category" type="xs:string" maxOccurs="1" minOccurs="0"/>
              <xs:element name="versions" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="version" maxOccurs="unbounded" minOccurs="1">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="num" type="validString" maxOccurs="1" minOccurs="1"/>
                          <xs:element name="commit" type="validCommit" maxOccurs="1" minOccurs="1"/>
                        </xs:all>
                        <xs:attribute name="flow_version" type="validFlow" use="optional"/>
                        <xs:attribute name="prefix" type="xs:string" use="optional"/>
                        <xs:attribute name="tools_min_version" type="validToolsVersion" use="optional"/>
                        <xs:attribute name="tools_max_version" type="validToolsVersion" use="optional"/>
                        <xs:attribute name="prov_capabilities_per_version" type="validCapabilities" use="optional"/>
                        <xs:attribute name="default_location_per_version" type="validResourceLocation" use="optional"/>
                        <xs:attribute name="not-for-locking" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="chips" maxOccurs="1" minOccurs="1">
                <xs:complexType>
                  <xs:all>
                    <xs:element type="validString" name="mcu" maxOccurs="1" minOccurs="1"/>
                    <xs:element type="xs:string" name="radio" maxOccurs="1" minOccurs="0"/>
                  </xs:all>
                </xs:complexType>
              </xs:element>
              <xs:element type="validName" name="name" maxOccurs="1" minOccurs="1"/>
              <xs:element type="xs:string" name="summary" maxOccurs="1" minOccurs="0"/>
              <xs:element type="validCapabilities" name="prov_capabilities" maxOccurs="1" minOccurs="0"/>
              <xs:element type="xs:string" name="description" maxOccurs="1" minOccurs="0"/>
              <xs:element type="validURIdoc" name="documentation_url" maxOccurs="1" minOccurs="0"/>
            </xs:all>
            <xs:attribute name="default_location" type="validResourceLocation" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="version" type="xs:string"/>
    </xs:complexType>
    <xs:key name="id">
      <xs:selector xpath="./*"/>
      <xs:field xpath="id"/>
    </xs:key>
  </xs:element>
</xs:schema>
